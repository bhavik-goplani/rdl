#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.7.3
# from Racc grammar file "parser.racc".
#

require 'racc/parser.rb'


module RDL::Type

class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 210)

def initialize()
  @yydebug = true
end

...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    40,    79,    71,    21,    43,    19,    20,   141,    23,   103,
    15,    14,    16,    22,   104,   -27,   142,    17,    34,    18,
     5,     6,    92,     8,    91,    70,    41,    41,    89,    90,
    21,     7,    19,    20,     7,    23,   124,    54,    14,    16,
    22,    38,    11,    66,    17,    67,    61,    65,    94,    93,
    55,    57,    56,    58,    59,    60,    21,    68,    19,    20,
    69,    23,    72,    54,    14,    16,    22,    76,    11,    71,
    17,    80,    61,    97,    95,    96,    55,    57,    56,    58,
    59,    60,    21,    81,    19,    20,    82,    23,    32,    30,
    14,    16,    22,    83,    11,    84,    17,    86,    18,    87,
    31,    35,    13,    34,    36,    21,    88,    19,    20,   -13,
    23,    32,    30,    14,    16,    22,    98,    11,    99,    17,
   100,    18,   101,    31,    35,    13,    34,    36,    21,   107,
    19,    20,   114,    23,   118,    15,    14,    16,    22,     7,
    11,   122,    17,   123,    18,   126,   109,    35,    13,    21,
    36,    19,    20,     7,   149,   128,   147,    14,    16,    22,
    89,    90,   130,    17,   131,    18,    47,   134,    45,    46,
     7,   150,    47,    43,    45,    46,    48,   143,     7,    43,
   144,   145,    48,   124,   151,   -89,   152,    50,   -87,    21,
   154,    19,    20,    50,    23,   -90,    15,    14,    16,    22,
   nil,    11,   nil,    17,   nil,    18,   nil,   nil,    21,    13,
    19,    20,   nil,    23,   nil,    15,    14,    16,    22,   nil,
    11,   nil,    17,   nil,    18,   nil,   nil,    21,    13,    19,
    20,   nil,    23,   nil,    15,    14,    16,    22,   nil,    11,
   nil,    17,   nil,    18,   nil,   nil,    21,    13,    19,    20,
   nil,    23,   nil,    15,    14,    16,    22,   nil,    11,   nil,
    17,   nil,    18,   nil,   nil,    21,    13,    19,    20,   nil,
    23,   nil,    15,    14,    16,    22,   nil,    11,   nil,    17,
   nil,    18,   nil,   nil,    21,    13,    19,    20,   nil,    23,
   nil,    15,    14,    16,    22,   nil,   nil,   nil,    17,   nil,
    18,   nil,   nil,    21,    13,    19,    20,   nil,    23,   nil,
    15,    14,    16,    22,   nil,    11,   nil,    17,   nil,    18,
   nil,   nil,    21,    13,    19,    20,   nil,    23,   nil,    15,
    14,    16,    22,   nil,    11,   nil,    17,   nil,    18,   nil,
   nil,    21,    13,    19,    20,   nil,    23,   nil,    15,    14,
    16,    22,   nil,    11,   nil,    17,   nil,    18,   nil,   nil,
   111,    13,    21,   nil,    19,    20,   nil,    23,   nil,    15,
    14,    16,    22,   nil,   nil,   nil,    17,   nil,    18,   nil,
   nil,    21,    13,    19,    20,   nil,    23,   nil,    15,    14,
    16,    22,   nil,   nil,   nil,    17,   nil,    18,   nil,   nil,
    21,    13,    19,    20,   nil,    23,   nil,    15,    14,    16,
    22,   nil,   nil,   nil,    17,   nil,    18,   nil,   nil,    21,
    13,    19,    20,   nil,    23,   nil,    15,    14,    16,    22,
   nil,   nil,   nil,    17,   nil,    18,   nil,   nil,    21,    13,
    19,    20,   nil,    23,   nil,    15,    14,    16,    22,   nil,
    11,   nil,    17,   nil,    18,   nil,   nil,    21,    13,    19,
    20,   nil,    23,   nil,    15,    14,    16,    22,   nil,    11,
   nil,    17,   nil,    18,   nil,   nil,    21,    13,    19,    20,
   nil,    23,   nil,    15,    14,    16,    22,   nil,    11,   nil,
    17,   nil,    18,   nil,   133,    21,    13,    19,    20,   nil,
    23,   nil,    15,    14,    16,    22,   nil,   nil,   nil,    17,
   nil,    18,   nil,   nil,    21,    13,    19,    20,   nil,    23,
   nil,    15,    14,    16,    22,   nil,    11,   138,    17,   nil,
    18,   nil,   nil,   nil,    13,   nil,   140,   nil,   nil,   nil,
   139,    57,    56,    58,    59,    60,    21,   nil,    19,    20,
   nil,    23,   nil,    15,    14,    16,    22,   nil,   nil,   nil,
    17,   nil,    18 ]

racc_action_check = [
    12,    42,    30,    55,    72,    55,    55,   132,    55,    67,
    55,    55,    55,    55,    67,    97,   132,    55,    72,    55,
     0,     0,    58,     1,    58,    30,    12,    42,    55,    55,
    18,     6,    18,    18,     0,    18,    97,    18,    18,    18,
    18,     8,    18,    21,    18,    25,    18,    18,    59,    59,
    18,    18,    18,    18,    18,    18,    61,    28,    61,    61,
    29,    61,    33,    61,    61,    61,    61,    39,    61,    43,
    61,    45,    61,    61,    60,    60,    61,    61,    61,    61,
    61,    61,     7,    46,     7,     7,    47,     7,     7,     7,
     7,     7,     7,    48,     7,    49,     7,    51,     7,    52,
     7,     7,     7,     7,     7,    68,    53,    68,    68,    54,
    68,    68,    68,    68,    68,    68,    62,    68,    63,    68,
    64,    68,    66,    68,    68,    68,    68,    68,    70,    69,
    70,    70,    78,    70,    82,    70,    70,    70,    70,    88,
    70,    91,    70,    95,    70,   102,    70,    70,    70,   142,
    70,   142,   142,   103,   142,   104,   142,   142,   142,   142,
   139,   139,   118,   142,   121,   142,    17,   127,    17,    17,
   128,   142,    84,    17,    84,    84,    17,   135,    17,    84,
   140,   141,    84,   144,   146,   147,   148,    17,   149,     5,
   153,     5,     5,    84,     5,   154,     5,     5,     5,     5,
   nil,     5,   nil,     5,   nil,     5,   nil,   nil,    11,     5,
    11,    11,   nil,    11,   nil,    11,    11,    11,    11,   nil,
    11,   nil,    11,   nil,    11,   nil,   nil,    34,    11,    34,
    34,   nil,    34,   nil,    34,    34,    34,    34,   nil,    34,
   nil,    34,   nil,    34,   nil,   nil,    35,    34,    35,    35,
   nil,    35,   nil,    35,    35,    35,    35,   nil,    35,   nil,
    35,   nil,    35,   nil,   nil,    36,    35,    36,    36,   nil,
    36,   nil,    36,    36,    36,    36,   nil,    36,   nil,    36,
   nil,    36,   nil,   nil,    40,    36,    40,    40,   nil,    40,
   nil,    40,    40,    40,    40,   nil,   nil,   nil,    40,   nil,
    40,   nil,   nil,    41,    40,    41,    41,   nil,    41,   nil,
    41,    41,    41,    41,   nil,    41,   nil,    41,   nil,    41,
   nil,   nil,    50,    41,    50,    50,   nil,    50,   nil,    50,
    50,    50,    50,   nil,    50,   nil,    50,   nil,    50,   nil,
   nil,    71,    50,    71,    71,   nil,    71,   nil,    71,    71,
    71,    71,   nil,    71,   nil,    71,   nil,    71,   nil,   nil,
    71,    71,    79,   nil,    79,    79,   nil,    79,   nil,    79,
    79,    79,    79,   nil,   nil,   nil,    79,   nil,    79,   nil,
   nil,    80,    79,    80,    80,   nil,    80,   nil,    80,    80,
    80,    80,   nil,   nil,   nil,    80,   nil,    80,   nil,   nil,
    81,    80,    81,    81,   nil,    81,   nil,    81,    81,    81,
    81,   nil,   nil,   nil,    81,   nil,    81,   nil,   nil,    83,
    81,    83,    83,   nil,    83,   nil,    83,    83,    83,    83,
   nil,   nil,   nil,    83,   nil,    83,   nil,   nil,    98,    83,
    98,    98,   nil,    98,   nil,    98,    98,    98,    98,   nil,
    98,   nil,    98,   nil,    98,   nil,   nil,   111,    98,   111,
   111,   nil,   111,   nil,   111,   111,   111,   111,   nil,   111,
   nil,   111,   nil,   111,   nil,   nil,   126,   111,   126,   126,
   nil,   126,   nil,   126,   126,   126,   126,   nil,   126,   nil,
   126,   nil,   126,   nil,   126,   130,   126,   130,   130,   nil,
   130,   nil,   130,   130,   130,   130,   nil,   nil,   nil,   130,
   nil,   130,   nil,   nil,   152,   130,   152,   152,   nil,   152,
   nil,   152,   152,   152,   152,   nil,   152,   131,   152,   nil,
   152,   nil,   nil,   nil,   152,   nil,   131,   nil,   nil,   nil,
   131,   131,   131,   131,   131,   131,    13,   nil,    13,    13,
   nil,    13,   nil,    13,    13,    13,    13,   nil,   nil,   nil,
    13,   nil,    13 ]

racc_action_pointer = [
    15,    23,   nil,   nil,   nil,   182,    12,    75,    41,   nil,
   nil,   201,    -4,   539,   nil,   nil,   nil,   159,    23,   nil,
   nil,    29,   nil,   nil,   nil,    25,   nil,   nil,    55,    46,
    -9,   nil,   nil,    60,   220,   239,   258,   nil,   nil,    47,
   277,   296,    -3,    58,   nil,    63,    75,    72,    85,    93,
   315,    75,    77,    95,    98,    -4,   nil,   nil,    -8,    17,
    42,    49,   114,    94,    96,   nil,   100,   -12,    98,   111,
   121,   334,   -10,   nil,   nil,   nil,   nil,   nil,   101,   355,
   374,   393,   112,   412,   165,   nil,   nil,   nil,   120,   nil,
   nil,   110,   nil,   nil,   nil,   111,   nil,     4,   431,   nil,
   nil,   nil,   142,   134,   134,   nil,   nil,   nil,   nil,   nil,
   nil,   450,   nil,   nil,   nil,   nil,   nil,   nil,   154,   nil,
   nil,   162,   nil,   nil,   nil,   nil,   469,   145,   151,   nil,
   488,   513,    -7,   nil,   nil,   155,   nil,   nil,   nil,   128,
   156,   163,   142,   nil,   151,   nil,   160,   161,   156,   164,
   nil,   nil,   507,   159,   171 ]

racc_action_default = [
   -91,   -91,    -1,    -2,    -3,   -91,   -91,   -31,   -91,    -4,
   -56,   -91,   -69,   -91,   -73,   -74,   -75,   -60,   -91,   -82,
   -83,   -91,   -85,   -86,    -5,   -91,   -32,   -33,   -34,   -37,
   -74,   -42,   -43,   -44,   -91,   -91,   -91,   -50,   155,   -91,
   -91,   -91,   -71,   -91,   -61,   -91,   -91,   -91,   -91,   -66,
   -91,   -91,   -91,   -91,   -74,   -14,   -15,   -16,   -17,   -19,
   -91,   -91,   -58,   -91,   -91,   -80,   -91,   -53,   -91,   -39,
   -91,   -91,   -91,   -45,   -48,   -49,   -57,   -70,   -91,   -91,
   -91,   -91,   -91,   -91,   -60,   -67,   -77,   -81,   -91,   -22,
   -30,   -18,   -25,   -20,   -26,   -21,   -29,   -80,   -91,   -78,
   -79,   -84,   -91,   -91,   -91,   -35,   -36,   -38,   -40,   -41,
   -47,   -91,   -52,   -46,   -76,   -72,   -62,   -63,   -91,   -65,
   -68,   -11,   -24,   -23,   -28,   -59,   -91,   -91,   -91,   -51,
   -91,   -91,    -6,    -9,   -54,   -91,   -64,   -12,   -13,   -14,
   -91,    -7,   -91,   -55,   -27,    -8,   -91,   -74,   -91,   -86,
   -88,   -10,   -91,   -91,   -76 ]

racc_goto_table = [
    42,     9,     2,    37,    78,    44,    52,    39,    24,    77,
    27,     1,     3,    26,     4,    25,   102,   146,   137,    51,
   108,   110,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    73,    74,    75,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    42,   nil,   nil,   nil,    85,   nil,   115,   116,
   117,   nil,   119,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   125,   nil,   nil,    37,   nil,    37,   112,   nil,   nil,
   nil,   106,    44,   120,   105,   113,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   121,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   136,
   nil,   nil,   nil,   nil,   nil,   127,   nil,   129,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   153,   nil,   nil,   nil,   nil,
   nil,   nil,   132,   nil,   nil,   nil,   nil,   nil,   nil,   148,
   135 ]

racc_goto_check = [
    21,     5,     2,     5,    18,    15,    20,     5,     2,    17,
    12,     1,     3,    11,     4,     6,     7,     8,     9,     2,
    14,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     5,     5,     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    21,   nil,   nil,   nil,     5,   nil,    17,    17,
    17,   nil,    17,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    18,   nil,   nil,     5,   nil,     5,     5,   nil,   nil,
   nil,    12,    15,    20,    11,    12,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,
   nil,   nil,   nil,   nil,   nil,     2,   nil,     5,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,     5,   nil,   nil,   nil,   nil,   nil,   nil,    21,
     2 ]

racc_goto_pointer = [
   nil,    11,     2,    12,    14,    -4,     8,   -51,  -125,  -113,
   nil,     6,     3,   nil,   -50,   -12,   -50,   -31,   -37,   nil,
   -11,   -13 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,    62,   nil,   nil,   nil,    64,
    53,   nil,   nil,    28,    29,    33,   nil,    10,    63,    49,
   nil,    12 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 37, :_reduce_1,
  1, 37, :_reduce_2,
  1, 37, :_reduce_3,
  2, 39, :_reduce_4,
  2, 40, :_reduce_5,
  6, 38, :_reduce_6,
  7, 38, :_reduce_7,
  8, 38, :_reduce_8,
  6, 38, :_reduce_9,
  9, 38, :_reduce_10,
  3, 45, :_reduce_11,
  5, 45, :_reduce_12,
  1, 46, :_reduce_13,
  1, 46, :_reduce_14,
  1, 46, :_reduce_15,
  1, 46, :_reduce_16,
  1, 46, :_reduce_17,
  2, 46, :_reduce_18,
  1, 46, :_reduce_19,
  2, 46, :_reduce_20,
  2, 46, :_reduce_21,
  2, 46, :_reduce_22,
  3, 46, :_reduce_23,
  3, 46, :_reduce_24,
  2, 46, :_reduce_25,
  2, 46, :_reduce_26,
  2, 46, :_reduce_27,
  3, 46, :_reduce_28,
  2, 46, :_reduce_29,
  2, 46, :_reduce_30,
  0, 42, :_reduce_31,
  1, 42, :_reduce_32,
  1, 42, :_reduce_33,
  1, 47, :_reduce_34,
  3, 47, :_reduce_35,
  3, 47, :_reduce_36,
  1, 49, :_reduce_37,
  3, 49, :_reduce_38,
  2, 49, :_reduce_39,
  3, 49, :_reduce_40,
  3, 49, :_reduce_41,
  1, 49, :_reduce_42,
  1, 49, :_reduce_43,
  1, 48, :_reduce_44,
  2, 48, :_reduce_45,
  3, 48, :_reduce_46,
  3, 51, :_reduce_47,
  2, 50, :_reduce_48,
  2, 50, :_reduce_49,
  1, 50, :_reduce_50,
  2, 52, :_reduce_51,
  1, 52, :_reduce_52,
  0, 43, :_reduce_53,
  3, 43, :_reduce_54,
  4, 43, :_reduce_55,
  1, 41, :_reduce_56,
  3, 41, :_reduce_57,
  1, 54, :_reduce_58,
  3, 54, :_reduce_59,
  0, 55, :_reduce_none,
  1, 55, :_reduce_61,
  3, 55, :_reduce_62,
  3, 55, :_reduce_63,
  5, 55, :_reduce_64,
  3, 55, :_reduce_65,
  1, 56, :_reduce_66,
  2, 56, :_reduce_67,
  3, 56, :_reduce_68,
  1, 53, :_reduce_69,
  3, 53, :_reduce_70,
  2, 53, :_reduce_71,
  4, 53, :_reduce_72,
  1, 57, :_reduce_73,
  1, 57, :_reduce_74,
  1, 57, :_reduce_75,
  4, 57, :_reduce_76,
  3, 57, :_reduce_77,
  3, 57, :_reduce_78,
  3, 57, :_reduce_79,
  2, 57, :_reduce_80,
  3, 57, :_reduce_81,
  1, 57, :_reduce_82,
  1, 57, :_reduce_83,
  3, 57, :_reduce_84,
  1, 57, :_reduce_85,
  1, 57, :_reduce_86,
  1, 44, :_reduce_87,
  1, 44, :_reduce_88,
  1, 44, :_reduce_89,
  4, 44, :_reduce_90 ]

racc_reduce_n = 91

racc_shift_n = 155

racc_token_table = {
  false => 0,
  :error => 1,
  :COMMA => 2,
  :RARROW => 3,
  :OR => 4,
  :HASH_TYPE => 5,
  :HASH_QUERY => 6,
  :CONST_BEGIN => 7,
  :RASSOC => 8,
  :FIXNUM => 9,
  :FLOAT => 10,
  :COLON => 11,
  :DOT => 12,
  :DOTS => 13,
  :ID => 14,
  :SYMBOL => 15,
  :SPECIAL_ID => 16,
  :STRING => 17,
  :PREDICATE => 18,
  :LPAREN => 19,
  :RPAREN => 20,
  :LBRACE => 21,
  :RBRACE => 22,
  :LBRACKET => 23,
  :RBRACKET => 24,
  :COMP => 25,
  :QUERY => 26,
  :BANG => 27,
  :STARSTAR => 28,
  :STAR => 29,
  :LESS => 30,
  :GREATER => 31,
  :EQUAL => 32,
  :TILDE => 33,
  :BIND => 34,
  :EOF => 35 }

racc_nt_base = 36

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "COMMA",
  "RARROW",
  "OR",
  "HASH_TYPE",
  "HASH_QUERY",
  "CONST_BEGIN",
  "RASSOC",
  "FIXNUM",
  "FLOAT",
  "COLON",
  "DOT",
  "DOTS",
  "ID",
  "SYMBOL",
  "SPECIAL_ID",
  "STRING",
  "PREDICATE",
  "LPAREN",
  "RPAREN",
  "LBRACE",
  "RBRACE",
  "LBRACKET",
  "RBRACKET",
  "COMP",
  "QUERY",
  "BANG",
  "STARSTAR",
  "STAR",
  "LESS",
  "GREATER",
  "EQUAL",
  "TILDE",
  "BIND",
  "EOF",
  "$start",
  "entry",
  "method_type",
  "bare_type",
  "query_type",
  "type_expr",
  "arg_list",
  "block",
  "effect",
  "method_sig_list",
  "method_name",
  "nonempty_arg_list",
  "named_arg_list",
  "arg",
  "base_arg",
  "named_arg",
  "base_arg_query_only",
  "union_type",
  "type_expr_comma_list",
  "hash_expr",
  "hash_expr_comma_list",
  "single_type" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_1(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_2(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 20)
  def _reduce_3(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 23)
  def _reduce_4(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 26)
  def _reduce_5(val, _values, result)
     result = RDL::Type::MethodType.new val[1].args, val[1].block, val[1].ret
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_6(val, _values, result)
            result = RDL::Type::MethodType.new val[1], val[3], val[5]

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_7(val, _values, result)
            result = RDL::Type::MethodType.new val[1], val[3], RDL::Type::AnnotatedArgType.new(val[6], val[5])

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_8(val, _values, result)
            result = RDL::Type::MethodType.new val[1], val[3], RDL::Type::DependentArgType.new(val[6], val[5], val[7])

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_9(val, _values, result)
         	  result = RDL::Type::MethodType.new(val[1], val[3], RDL::Type::ComputedType.new(val[5]))

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 42)
  def _reduce_10(val, _values, result)
            result = RDL::Type::MethodType.new(val[1], val[3], val[5], val[7])

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 46)
  def _reduce_11(val, _values, result)
     result = [val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_12(val, _values, result)
     result = [val[0], val[2]] + val[4]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_13(val, _values, result)
     result = val[0].to_sym
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_14(val, _values, result)
     result = :!
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_15(val, _values, result)
     result = :*
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 53)
  def _reduce_16(val, _values, result)
     result = :**
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 54)
  def _reduce_17(val, _values, result)
     result = :<
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_18(val, _values, result)
     result = :<=
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_19(val, _values, result)
     result = :>
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_20(val, _values, result)
     result = :>=
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_21(val, _values, result)
     result = :==
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 59)
  def _reduce_22(val, _values, result)
     result = :!=
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_23(val, _values, result)
     result = :===
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 61)
  def _reduce_24(val, _values, result)
     result = :<=>
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 62)
  def _reduce_25(val, _values, result)
     result = :<<
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_26(val, _values, result)
     result = :>>
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_27(val, _values, result)
     result = :[]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 65)
  def _reduce_28(val, _values, result)
     result = :[]=
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_29(val, _values, result)
     result = :=~
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_30(val, _values, result)
     result = :!~
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 70)
  def _reduce_31(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_32(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 73)
  def _reduce_33(val, _values, result)
          result = [RDL::Type::FiniteHashType.new(Hash[*val[0][0]], val[0][1])]

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_34(val, _values, result)
     result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_35(val, _values, result)
     result = val[2].unshift val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 78)
  def _reduce_36(val, _values, result)
     # named arg list must come last
      result = [val[0], RDL::Type::FiniteHashType.new(Hash[*val[2][0]], val[2][1])]

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 82)
  def _reduce_37(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_38(val, _values, result)
     result = RDL::Type::DependentArgType.new(val[1], val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_39(val, _values, result)
     result = RDL::Type::AnnotatedArgType.new(val[1], val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_40(val, _values, result)
     result = RDL::Type::BoundArgType.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_41(val, _values, result)
     result = RDL::Type::BoundArgType.new(val[0], RDL::Type::ComputedType.new(val[2]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_42(val, _values, result)
     result = RDL::Type::ComputedType.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 88)
  def _reduce_43(val, _values, result)
     result = RDL::Type::DotsQuery.new
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 90)
  def _reduce_44(val, _values, result)
     result = [val[0], nil]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_45(val, _values, result)
     result = [[], val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 92)
  def _reduce_46(val, _values, result)
     result = [val[0] + val[2][0], val[2][1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 94)
  def _reduce_47(val, _values, result)
     result = [val[0].to_sym, val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 97)
  def _reduce_48(val, _values, result)
     result = RDL::Type::OptionalType.new val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 98)
  def _reduce_49(val, _values, result)
     result = RDL::Type::VarargType.new val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 99)
  def _reduce_50(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 101)
  def _reduce_51(val, _values, result)
     result = RDL::Type::OptionalType.new val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_52(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_53(val, _values, result)
     result = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_54(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_55(val, _values, result)
     result = RDL::Type::OptionalType.new val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_56(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 111)
  def _reduce_57(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 114)
  def _reduce_58(val, _values, result)
     result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 115)
  def _reduce_59(val, _values, result)
     result = [val[0]] + val[2]
    result
  end
.,.,

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.racc', 118)
  def _reduce_61(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 119)
  def _reduce_62(val, _values, result)
     result = [val[0].to_i, val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 120)
  def _reduce_63(val, _values, result)
     result = [val[0].to_f, val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 122)
  def _reduce_64(val, _values, result)
        result = [Kernel.const_get(val[0]), val[2]]

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 124)
  def _reduce_65(val, _values, result)
     result = [val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 127)
  def _reduce_66(val, _values, result)
     result = [val[0], nil]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 128)
  def _reduce_67(val, _values, result)
     result = [[], val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 129)
  def _reduce_68(val, _values, result)
     result = [val[0] + val[2][0], val[2][1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 132)
  def _reduce_69(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 133)
  def _reduce_70(val, _values, result)
     result = RDL::Type::UnionType.new val[0], val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 134)
  def _reduce_71(val, _values, result)
     result = RDL::Type::NonNullType.new val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 135)
  def _reduce_72(val, _values, result)
     result = RDL::Type::UnionType.new(RDL::Type::NonNullType.new(val[1]), val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 138)
  def _reduce_73(val, _values, result)
     result = RDL::Type::SingletonType.new(val[0].to_sym)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 140)
  def _reduce_74(val, _values, result)
          if val[0] == 'nil' then
        result = RDL::Globals.types[:nil]
      elsif val[0] == 'true' then
        result = RDL::Globals.types[:true]
      elsif val[0] == 'false'
        result = RDL::Globals.types[:false]
      elsif val[0] =~ /^[a-z_]+\w*\'?/ then
        result = RDL::Type::VarType.new(val[0].to_sym)
      else
        result = RDL::Type::NominalType.new val[0]
      end

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 153)
  def _reduce_75(val, _values, result)
          if RDL::Globals.special_types.has_key? val[0] then
        result = RDL::Globals.special_types[val[0]]
      else
        fail "Unexpected special type identifier #{val[0]}"
      end

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 160)
  def _reduce_76(val, _values, result)
          result = RDL::Type::GenericType.new(val[0], *val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 162)
  def _reduce_77(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 164)
  def _reduce_78(val, _values, result)
          result = RDL::Type::TupleType.new(*val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 167)
  def _reduce_79(val, _values, result)
          result = RDL::Type::StructuralType.new(Hash[*val[1]])

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 170)
  def _reduce_80(val, _values, result)
          result = RDL::Type::TupleType.new

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 173)
  def _reduce_81(val, _values, result)
          result = RDL::Type::FiniteHashType.new(Hash[*val[1][0]], val[1][1])

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 175)
  def _reduce_82(val, _values, result)
     result = RDL::Type::SingletonType.new(val[0].to_i)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 176)
  def _reduce_83(val, _values, result)
     result = RDL::Type::SingletonType.new(val[0].to_f)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 178)
  def _reduce_84(val, _values, result)
          result =  RDL::Type::SingletonType.new(Kernel.const_get(val[1]))

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 181)
  def _reduce_85(val, _values, result)
     result = RDL::Type::PreciseStringType.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 182)
  def _reduce_86(val, _values, result)
     result = RDL::Type::WildQuery.new
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 185)
  def _reduce_87(val, _values, result)
     result = RDL::Globals.types[:pure]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 186)
  def _reduce_88(val, _values, result)
     result = RDL::Globals.types[:impure]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 188)
  def _reduce_89(val, _values, result)
          if val[0] == 'nil' then
        result = RDL::Globals.types[:nil]
      elsif val[0] == 'true' then
        result = RDL::Globals.types[:true]
      elsif val[0] == 'false'
        result = RDL::Globals.types[:false]
      elsif val[0] =~ /^[a-z_]+\w*\'?/ then
        result = RDL::Type::VarType.new(val[0].to_sym)
      else
        result = RDL::Type::NominalType.new val[0]
      end

    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 201)
  def _reduce_90(val, _values, result)
          result = RDL::Type::GenericType.new(val[0], *val[2])

    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser


end
